---
- name: create static zone files
  template:
    src: db.domain.j2
    dest: /etc/bind/db.{{ item.origin }}
  when: named_master
  with_items: "{{ named_static_zones }}"
  notify: reload bind
  tags: [configure]

- name: create dynamic zone files
  template:
    src: db.domain.j2
    dest: /var/lib/bind/db.{{ item.origin }}
    force: no
  when: named_master
  with_items: "{{ named_dynamic_zones }}"
  notify: reload bind
  tags: [configure]

- name: sync journal file changes for dynamic zones to the master files
  command: rndc sync
  when: "{{ named_master }}"
  tags: [configure]

- name: check if dynamic resource records exist
  command: grep "^{{ item.1.name }}\s.*\s{{ item.1.type }}\s*{{ item.1.rdata }}" /var/lib/bind/db.{{ item.0.origin }}
  register: grep_zones
  when: "{{ named_master }}"
  failed_when: no
  changed_when: no
  with_subelements:
  - "{{ named_dynamic_zones }}"
  - records
  tags: [configure]

- name: add dynamic RRs
  dnsupdate:
    mname: "127.0.0.1"
    keyname: DHCP_UPDATER
    secret: "{{ dhcp_update_key }}"
    zone: "{{ item.item.0.origin }}"
    domain: "{{ item.item.1.name }}"
    ttl: 600
    rtype: "{{ item.item.1.type }}"
    rdata: "{{ item.item.1.rdata }}"
    op: add
  with_items: "{{ grep_zones.results }}"
  when: "named_master and item.rc != 0"
  tags: [configure]
