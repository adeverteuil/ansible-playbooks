[agent]
  interval = "1s"
  round_interval = false
  flush_interval = "1s"

# Stream and parse log file(s).
[[inputs.logparser]]
  files = ["/root/mainlog"]
  from_beginning = true

  [inputs.logparser.grok]
    patterns = ["%{EXIM_RECEIVED}", "%{EXIM_SENT}"]
    measurement = "exim_mainlog"
    custom_patterns = '''
    EXIM_TS_PATTERN %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME} %{ISO8601_TIMEZONE}
    EXIM_TS %{EXIM_TS_PATTERN:ts:ts-"2006-01-02 15:04:05 -0700"}
    EXIM_MSGID [0-9A-Za-z]{6}-[0-9A-Za-z]{6}-[0-9A-Za-z]{2}
    EXIM_FLAGS (<=|[-=>*]>|[*]{2}|==)
    EXIM_FLAG %{EXIM_FLAGS:flag:tag}
    EXIM_QT ((\d+y)?(\d+w)?(\d+d)?(\d+h)?(\d+m)?(\d+s)?)
    EXIM_REMOTE_HOST (H=(%{NOTSPACE} )?(\(%{NOTSPACE}\) )?\[[^]]+\])
    EXIM_USER (U=%{WORD})
    EXIM_INTERFACE (I=\[%{IP}\](:%{NUMBER}))
    EXIM_PROTOCOL (P=%{NOTSPACE:protocol:tag})
    EXIM_MSG_SIZE (S=%{NUMBER:size:int})
    EXIM_HEADER_ID (id=%{NOTSPACE})
    EXIM_SUBJECT (T=%{QS})
    EXIM_SENDER (F=<%{EMAILADDRESS}>)
    EXIM_RECIPIENT (%{NOTSPACE} <%{EMAILADDRESS}>|%{EMAILADDRESS})
    EXIM_TLS_CIPHER (X=%{NOTSPACE})
    EXIM_AUTHENTICATOR (A=%{WORD:authenticator:tag}(:%{NOTSPACE:auth_id:tag})?)
    EXIM_ROUTER (R=%{NOTSPACE:router:tag})
    EXIM_TRANSPORT (T=%{NOTSPACE:transport:tag})
    EXIM_CONFIRMATION (C=%{QUOTEDSTRING})
    EXIM_DELIVERY_TIME (DT=%{EXIM_QT})
    ANYTHING (.*)

    EXIM_RECEIVED %{EXIM_TS} %{EXIM_MSGID} %{EXIM_FLAG} %{EMAILADDRESS} %{EXIM_REMOTE_HOST} %{EXIM_PROTOCOL} (%{EXIM_TLS_CIPHER} )?(%{EXIM_AUTHENTICATOR} )?%{EXIM_MSG_SIZE}
    EXIM_SENT %{EXIM_TS} %{EXIM_MSGID} %{EXIM_FLAG} %{EXIM_RECIPIENT} %{EXIM_SENDER} %{EXIM_ROUTER} %{EXIM_TRANSPORT} %{EXIM_MSG_SIZE} %{EXIM_REMOTE_HOST} (%{EXIM_TLS_CIPHER} )?%{EXIM_CONFIRMATION} %{EXIM_DELIVERY_TIME}
    '''

# Send telegraf metrics to file(s)
[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["stdout"]

  ## Data format to output.
  ## Each data format has it's own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "influx"

