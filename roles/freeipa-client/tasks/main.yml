---
- name: check if we have a cached kerberos ticket
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  command: klist
  run_once: yes
  changed_when: false

- name: check if the host exists in the directory
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  command: ipa host-show {{ inventory_hostname }}
  register: host_show
  failed_when: host_show.rc == 1
  changed_when: false

- name: create the host principal
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  command: ipa host-add {{ ansible_fqdn }} --force
            --sshpubkey \"{{ ansible_ssh_host_key_rsa_public }}\"
            --os {{ ansible_distribution }}
  when: host_show.rc != 0

- name: check if /etc/krb5.keytab exists
  stat: path=/etc/krb5.keytab
  register: keytab

- name: generate the host keytab
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  command: /usr/sbin/ipa-getkeytab -s {{ ipa_server }} -p host/{{ ansible_fqdn }} -k /tmp/{{ ansible_hostname }}.keytab
  when: not keytab.stat.exists

- name: transfer the keytab over to the IPA client
  synchronize:
    src: /tmp/{{ ansible_hostname }}.keytab
    dest: /etc/krb5.keytab
    archive: no
    ssh_args: -l root
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  when: not keytab.stat.exists
  notify: restart sssd

- name: remove the keytab file on the FreeIPA server
  delegate_to: "{{ ipa_server }}"
  remote_user: ""
  become: no
  file:
    path: /tmp/{{ ansible_hostnameÂ }}.keytab
    state: absent

- name: install sssd
  pacman: name=sssd state=present

- name: configure sssd
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: 0600
  notify: restart sssd

- name: disable group and passwd caching for NSCD
  lineinfile:
    regexp: enable-cache.*{{ item }}
    line: "	enable-cache		{{ item }}		no"
    dest: /etc/nscd.conf
  with_items: [group, passwd]

- name: configure NSS
  template:
    src: nsswitch.conf.j2
    dest: /etc/nsswitch.conf

- name: configure PAM
  template:
    src: pam_{{ item }}.j2
    dest: /etc/pam.d/{{ item }}
  with_items:
  - system-auth
  - sudo
  - passwd
  - system-login
  - su
  - su-l

- name: configure krb5
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf

- name: set AuthorizedKeysCommand for sshd
  lineinfile:
    regexp: AuthorizedKeysCommand\b
    line: AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys
    dest: /etc/ssh/sshd_config
  notify: restart sshd

- name: set AuthorizedKeysCommandUser for sshd
  lineinfile:
    regexp: AuthorizedKeysCommandUser
    line: AuthorizedKeysCommandUser nobody
    dest: /etc/ssh/sshd_config
  notify: restart sshd

- name: set GlobalKnownHostsFile for ssh
  lineinfile:
    regexp: GlobalKnownHostsFile
    line: GlobalKnownHostsFile /var/lib/sss/pubconf/known_hosts
    dest: /etc/ssh/ssh_config

- name: set ProxyCommand for ssh
  lineinfile:
    regexp: ProxyCommand
    line: ProxyCommand /usr/bin/sss_ssh_knownhostsproxy -p %p %h
    dest: /etc/ssh/ssh_config

- name: start and enable sssd
  service: name=sssd state=started enabled=yes

- name: exclude lastlog and faillog from backups
  copy:
    src: backup_excludes
    dest: /var/log/.backup
