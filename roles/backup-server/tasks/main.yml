---
- name: install backup
  pacman: name=python-backup-git state=latest update_cache=yes

- name: create the repository directory
  file:
    path: /var/backups
    state: directory

- name: create a directory for the LUKS keys
  file:
    path: /root/keys
    mode: 0700
    state: directory

- name: copy the LUKS keys
  copy:
    src: /root/lib/crypt/{{ item }}
    dest: /root/keys/{{ item }}
  with_items:
  - disk-backups.key
  - disk-backups2.key
  ignore_errors: yes

- name: create crypttab entries
  lineinfile:
    dest: /etc/crypttab
    line: "{{ item }}"
  with_items:
  - backups        /dev/disk/by-uuid/83b124a4-826e-4aa5-8e72-a540631cfea3   /root/keys/disk-backups.key    nofail
  - backups2       /dev/disk/by-uuid/e0bd582e-b64f-45c8-9c79-b4539bcb0039   /root/keys/disk-backups2.key   nofail
  notify: reload systemd

- name: create fstab entries
  lineinfile:
    dest: /etc/fstab
    line: "{{ item }}"
  with_items:
  - LABEL=backups  /var/backups ext3 rw,noexec,nouser,async,nodev,noauto,nosuid,nofail,x-systemd.automount 0   2
  - LABEL=backups2 /var/backups ext3 rw,noexec,nouser,async,nodev,noauto,nosuid,nofail,x-systemd.automount 0   2
  notify: reload systemd

- name: create ssh keys for root user
  command: ssh-keygen -N "" -f /root/.ssh/id_rsa
  args:
    creates: /root/.ssh/id_rsa.pub

- name: start and enable backup.timer
  service: name=backup.timer state=started enabled=yes

- name: install Munin plugins if Munin is installed
  file:
    src: /usr/lib/backup/backup_
    dest: /etc/munin/plugins/{{ item }}
    state: link
  with_items:
  - backup_age
  - backup_duration
  notify: restart munin-node
  ignore_errors: yes
